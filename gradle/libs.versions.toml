[versions]
androidGradlePlugin = "8.1.3"
activityCompose = "1.8.2"
lifeCycleViewModelCompose = "2.7.0"
jUnit = "4.13.2"
androidxTestExt = "1.1.5"
espressoCore = "3.5.1"
composeBom = "2024.01.00"
ktx = "1.9.0"
androidxLifecycle = "2.7.0"
okhttp = "4.9.0"
retrofit = "2.9.0"
kotlinxSerializationJson = "1.6.0"
retrofitKotlinxSerializationConverter = "1.0.0"
hilt = "2.48.1"
glide = "4.15.1"
rxAndroid = "2.1.1"
rxKotlin = "2.4.0"
rxJava = "2.2.19"
kotlin = "1.8.10"
spinkit = "1.4.0"
room = "2.6.1"
navigation = "2.7.6"
#material = "1.4.3"
hiltNavigationFragment = "1.0.0"
timber = "5.0.1"
preference = "1.2.0"
hiltNavigationCompose = "1.0.0"
bookContentParser = "1.0.19"
paging3 = "3.2.1"
pagingCompose = "3.3.0-alpha03"
gsonConverter = "2.9.0"
gson = "2.10.1"
glideCompose = "1.0.0-beta01"
coil = "2.6.0"

[libraries]
androidx-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "ktx" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-ui-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-material = { group = "androidx.compose.material", name = "material" }
#compose-material3 = { group = "androidx.compose.material3", name = "material3" }

# Optional - Integration with activities
compose-activity = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
# Optional - Integration with ViewModels
compose-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifeCycleViewModelCompose" }
# Optional - Integration with LiveData
compose-livedata = { group = "androidx.compose.runtime", name = "runtime-livedata" }
# Optional - Integration with RxJava
compose-rxjava2 = { group = "androidx.compose.runtime", name = "runtime-rxjava2" }

# test
junit = { group = "junit", name = "junit", version.ref = "jUnit" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidxTestExt" }
androidx-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }

# UI
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }

# Lifecycle
lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
lifecycle-viewmodel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }
lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
lifecycle-compose = { group = "androidx.lifecycle", name ="lifecycle-runtime-compose", version.ref = "androidxLifecycle"}
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }

# Network
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-adapter-rxjava2 = { group = "com.squareup.retrofit2", name = "adapter-rxjava2", version.ref = "retrofit" }
okhttp-core = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
retrofit-kotlinx-serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKotlinxSerializationConverter" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "gsonConverter"}
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson"}

# DI
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltNavigationCompose"}

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

preference = { module = "androidx.preference:preference", version.ref = "preference" }

# Paging3
paging3 = { group = "androidx.paging", name = "paging-runtime", version.ref = "paging3"}
paging-compose = { group = "androidx.paging", name = "paging-compose", version.ref = "pagingCompose"}

# Third Party
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil"}
spinkit = { group = "com.github.ybq", name = "Android-SpinKit", version.ref = "spinkit" }
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }
bookContentParser = { group = "com.github.ejjang2030", name = "BookContentParser", version.ref ="bookContentParser"}

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[bundles]
lifecycle = ["lifecycle-runtime-ktx", "lifecycle-viewmodel", "lifecycle-viewmodel-savedstate", "lifecycle-livedata-ktx"]
network = ["retrofit-core", "retrofit-adapter-rxjava2", "okhttp-core", "okhttp-logging"]
room = ["room-ktx", "room-runtime"]